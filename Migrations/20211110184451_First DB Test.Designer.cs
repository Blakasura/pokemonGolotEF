// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace pokemonGolot.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20211110184451_First DB Test")]
    partial class FirstDBTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("GimnasJugador", b =>
                {
                    b.Property<int>("gimnasosid_gimnas")
                        .HasColumnType("integer");

                    b.Property<string>("jugadorsnom_jugador")
                        .HasColumnType("text");

                    b.HasKey("gimnasosid_gimnas", "jugadorsnom_jugador");

                    b.HasIndex("jugadorsnom_jugador");

                    b.ToTable("GimnasJugador");
                });

            modelBuilder.Entity("Model.Acompanyant", b =>
                {
                    b.Property<int>("id_acompanyant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("captures_acompanyant")
                        .HasColumnType("integer");

                    b.Property<DateTime>("data_final")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("data_inici")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("distancia_acompanyant")
                        .HasColumnType("double precision");

                    b.Property<string>("jugadornom_jugador")
                        .HasColumnType("text");

                    b.Property<int?>("pokemonid_pokemon")
                        .HasColumnType("integer");

                    b.HasKey("id_acompanyant");

                    b.HasIndex("jugadornom_jugador");

                    b.HasIndex("pokemonid_pokemon");

                    b.ToTable("Acompanyants");
                });

            modelBuilder.Entity("Model.Amistat", b =>
                {
                    b.Property<string>("JugadorId")
                        .HasColumnType("text");

                    b.Property<string>("JugadorId2")
                        .HasColumnType("text");

                    b.Property<bool>("activat_amistat")
                        .HasColumnType("boolean");

                    b.Property<bool>("intercanvi_amistat")
                        .HasColumnType("boolean");

                    b.Property<int>("nivell_amistat")
                        .HasColumnType("integer");

                    b.HasKey("JugadorId", "JugadorId2");

                    b.HasIndex("JugadorId2");

                    b.ToTable("Amistats");
                });

            modelBuilder.Entity("Model.Efectivitat", b =>
                {
                    b.Property<int>("tipusId")
                        .HasColumnType("integer");

                    b.Property<int>("tipusId2")
                        .HasColumnType("integer");

                    b.Property<double>("efectivitat")
                        .HasColumnType("double precision");

                    b.HasKey("tipusId", "tipusId2");

                    b.HasIndex("tipusId2");

                    b.ToTable("Efectivitats");
                });

            modelBuilder.Entity("Model.Equip", b =>
                {
                    b.Property<string>("nom_equip")
                        .HasColumnType("text");

                    b.HasKey("nom_equip");

                    b.ToTable("Equip");
                });

            modelBuilder.Entity("Model.Evolucions", b =>
                {
                    b.Property<int>("pokemonId")
                        .HasColumnType("integer");

                    b.Property<int>("pokemonId2")
                        .HasColumnType("integer");

                    b.Property<int>("caramels_evolucions")
                        .HasColumnType("integer");

                    b.HasKey("pokemonId", "pokemonId2");

                    b.HasIndex("pokemonId2");

                    b.ToTable("Evolucio");
                });

            modelBuilder.Entity("Model.Gimnas", b =>
                {
                    b.Property<int>("id_gimnas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("equipnom_equip")
                        .HasColumnType("text");

                    b.Property<int>("exp_gimnas")
                        .HasColumnType("integer");

                    b.Property<string>("ubicacio_gimnas")
                        .HasColumnType("text");

                    b.HasKey("id_gimnas");

                    b.HasIndex("equipnom_equip");

                    b.ToTable("Gimnasos");
                });

            modelBuilder.Entity("Model.Incursio", b =>
                {
                    b.Property<int>("id_incursio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("gimnasid_gimnas")
                        .HasColumnType("integer");

                    b.Property<int?>("pokemonid_pokemon")
                        .HasColumnType("integer");

                    b.Property<string>("ubicacio_incursio")
                        .HasColumnType("text");

                    b.HasKey("id_incursio");

                    b.HasIndex("gimnasid_gimnas");

                    b.HasIndex("pokemonid_pokemon");

                    b.ToTable("Incursions");
                });

            modelBuilder.Entity("Model.Jugador", b =>
                {
                    b.Property<string>("nom_jugador")
                        .HasColumnType("text");

                    b.Property<string>("contrasenya_jugador")
                        .HasColumnType("text");

                    b.Property<string>("email_jugador")
                        .HasColumnType("text");

                    b.Property<string>("equipnom_equip")
                        .HasColumnType("text");

                    b.Property<int>("maxim_objectes_jugador")
                        .HasColumnType("integer");

                    b.Property<int>("maxim_pokemons_jugador")
                        .HasColumnType("integer");

                    b.Property<double>("nivell_jugador")
                        .HasColumnType("double precision");

                    b.Property<int?>("pokemonid_pokemon")
                        .HasColumnType("integer");

                    b.HasKey("nom_jugador");

                    b.HasIndex("equipnom_equip");

                    b.HasIndex("pokemonid_pokemon");

                    b.ToTable("Jugadors");
                });

            modelBuilder.Entity("Model.Jugador_Pokemon", b =>
                {
                    b.Property<int>("id_jugador_pokemon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("IV_atac_jugador_pokemon")
                        .HasColumnType("integer");

                    b.Property<int>("IV_defensa_jugador_pokemon")
                        .HasColumnType("integer");

                    b.Property<int>("IV_vida_jugador_pokemon")
                        .HasColumnType("integer");

                    b.Property<string>("jugadornom_jugador")
                        .HasColumnType("text");

                    b.Property<int>("nivell_jugador_pokemon")
                        .HasColumnType("integer");

                    b.Property<int?>("pokemonid_pokemon")
                        .HasColumnType("integer");

                    b.Property<int>("punts_combat_jugador_pokemon")
                        .HasColumnType("integer");

                    b.HasKey("id_jugador_pokemon");

                    b.HasIndex("jugadornom_jugador");

                    b.HasIndex("pokemonid_pokemon");

                    b.ToTable("Jugadors_Pokemons");
                });

            modelBuilder.Entity("Model.Jugador_Pokemon_Gimnas", b =>
                {
                    b.Property<int>("jugador_pokemonId")
                        .HasColumnType("integer");

                    b.Property<int>("gimnasId")
                        .HasColumnType("integer");

                    b.Property<int>("vida_pokemon")
                        .HasColumnType("integer");

                    b.HasKey("jugador_pokemonId", "gimnasId");

                    b.HasIndex("gimnasId");

                    b.ToTable("Jugadors_Pokemons_Gimnasos");
                });

            modelBuilder.Entity("Model.Missio", b =>
                {
                    b.Property<int>("id_misio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("descripcio_misio")
                        .HasColumnType("text");

                    b.Property<int>("objectiu_misio")
                        .HasColumnType("integer");

                    b.Property<int>("recompensa_misio")
                        .HasColumnType("integer");

                    b.Property<bool>("tipus_misio")
                        .HasColumnType("boolean");

                    b.HasKey("id_misio");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Model.Missio_Jugador", b =>
                {
                    b.Property<string>("jugadorId")
                        .HasColumnType("text");

                    b.Property<int>("missioId")
                        .HasColumnType("integer");

                    b.Property<bool>("activa_missio")
                        .HasColumnType("boolean");

                    b.Property<int>("progres_missio")
                        .HasColumnType("integer");

                    b.HasKey("jugadorId", "missioId");

                    b.HasIndex("missioId");

                    b.ToTable("Missions_Jugadors");
                });

            modelBuilder.Entity("Model.Moviment", b =>
                {
                    b.Property<int>("id_moviment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("delta_energia_pokemon_moviment")
                        .HasColumnType("integer");

                    b.Property<int>("duracio_moviment")
                        .HasColumnType("integer");

                    b.Property<double>("escalat_perduda_moviment")
                        .HasColumnType("double precision");

                    b.Property<string>("nom_moviment")
                        .HasColumnType("text");

                    b.Property<int>("potencia_moviment")
                        .HasColumnType("integer");

                    b.Property<int?>("tipusid_tipus")
                        .HasColumnType("integer");

                    b.HasKey("id_moviment");

                    b.HasIndex("tipusid_tipus");

                    b.ToTable("Moviments");
                });

            modelBuilder.Entity("Model.Objecte", b =>
                {
                    b.Property<string>("nom_objecte")
                        .HasColumnType("text");

                    b.Property<string>("descripcio_objecte")
                        .HasColumnType("text");

                    b.Property<double>("preu_objecte")
                        .HasColumnType("double precision");

                    b.HasKey("nom_objecte");

                    b.ToTable("Objectes");
                });

            modelBuilder.Entity("Model.Objecte_Jugador", b =>
                {
                    b.Property<string>("jugadorId")
                        .HasColumnType("text");

                    b.Property<string>("objecteId")
                        .HasColumnType("text");

                    b.Property<int>("quantitat")
                        .HasColumnType("integer");

                    b.HasKey("jugadorId", "objecteId");

                    b.HasIndex("objecteId");

                    b.ToTable("Objectes_Jugadors");
                });

            modelBuilder.Entity("Model.Pokedex", b =>
                {
                    b.Property<int>("pokemonId")
                        .HasColumnType("integer");

                    b.Property<string>("jugadorId")
                        .HasColumnType("text");

                    b.Property<int>("caramels_pokedex")
                        .HasColumnType("integer");

                    b.Property<bool>("vist_pokedex")
                        .HasColumnType("boolean");

                    b.HasKey("pokemonId", "jugadorId");

                    b.HasIndex("jugadorId");

                    b.ToTable("Pokedexs");
                });

            modelBuilder.Entity("Model.Pokemon", b =>
                {
                    b.Property<int>("id_pokemon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("atac_pokemon")
                        .HasColumnType("integer");

                    b.Property<int>("defensa_pokemon")
                        .HasColumnType("integer");

                    b.Property<int>("max_cp_pokemon")
                        .HasColumnType("integer");

                    b.Property<string>("nom_pokemon")
                        .HasColumnType("text");

                    b.Property<string>("rarity")
                        .HasColumnType("text");

                    b.Property<int>("stamina_pokemon")
                        .HasColumnType("integer");

                    b.HasKey("id_pokemon");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Model.Pokeparada", b =>
                {
                    b.Property<int>("id_pokeparada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("ubicacio_pokeparada")
                        .HasColumnType("text");

                    b.HasKey("id_pokeparada");

                    b.ToTable("Pokeparades");
                });

            modelBuilder.Entity("Model.Regal", b =>
                {
                    b.Property<int>("id_regal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.HasKey("id_regal");

                    b.ToTable("Regals");
                });

            modelBuilder.Entity("Model.Regal_enviat", b =>
                {
                    b.Property<int>("id_regal_enviat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("jugadornom_jugador")
                        .HasColumnType("text");

                    b.Property<bool>("obert_regal_enviat")
                        .HasColumnType("boolean");

                    b.Property<int?>("regalid_regal")
                        .HasColumnType("integer");

                    b.HasKey("id_regal_enviat");

                    b.HasIndex("jugadornom_jugador");

                    b.HasIndex("regalid_regal");

                    b.ToTable("Regals_enviats");
                });

            modelBuilder.Entity("Model.Tipus", b =>
                {
                    b.Property<int>("id_tipus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("nom_tipus")
                        .HasColumnType("text");

                    b.HasKey("id_tipus");

                    b.ToTable("Tipus");
                });

            modelBuilder.Entity("MovimentPokemon", b =>
                {
                    b.Property<int>("movimentsid_moviment")
                        .HasColumnType("integer");

                    b.Property<int>("pokemonsid_pokemon")
                        .HasColumnType("integer");

                    b.HasKey("movimentsid_moviment", "pokemonsid_pokemon");

                    b.HasIndex("pokemonsid_pokemon");

                    b.ToTable("MovimentPokemon");
                });

            modelBuilder.Entity("GimnasJugador", b =>
                {
                    b.HasOne("Model.Gimnas", null)
                        .WithMany()
                        .HasForeignKey("gimnasosid_gimnas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Jugador", null)
                        .WithMany()
                        .HasForeignKey("jugadorsnom_jugador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Acompanyant", b =>
                {
                    b.HasOne("Model.Jugador", "jugador")
                        .WithMany()
                        .HasForeignKey("jugadornom_jugador");

                    b.HasOne("Model.Pokemon", "pokemon")
                        .WithMany()
                        .HasForeignKey("pokemonid_pokemon");

                    b.Navigation("jugador");

                    b.Navigation("pokemon");
                });

            modelBuilder.Entity("Model.Amistat", b =>
                {
                    b.HasOne("Model.Jugador", "jugador1")
                        .WithMany("fa_amistats")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Jugador", "jugador2")
                        .WithMany("te_amistats")
                        .HasForeignKey("JugadorId2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("jugador1");

                    b.Navigation("jugador2");
                });

            modelBuilder.Entity("Model.Efectivitat", b =>
                {
                    b.HasOne("Model.Tipus", "tipus1")
                        .WithMany("te_efectivitat")
                        .HasForeignKey("tipusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tipus", "tipus2")
                        .WithMany("fa_efectivitat")
                        .HasForeignKey("tipusId2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tipus1");

                    b.Navigation("tipus2");
                });

            modelBuilder.Entity("Model.Evolucions", b =>
                {
                    b.HasOne("Model.Pokemon", "pokemon")
                        .WithMany("te_evolucions")
                        .HasForeignKey("pokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Pokemon", "pokemonEvolucio")
                        .WithMany("fa_evolucions")
                        .HasForeignKey("pokemonId2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pokemon");

                    b.Navigation("pokemonEvolucio");
                });

            modelBuilder.Entity("Model.Gimnas", b =>
                {
                    b.HasOne("Model.Equip", "equip")
                        .WithMany()
                        .HasForeignKey("equipnom_equip");

                    b.Navigation("equip");
                });

            modelBuilder.Entity("Model.Incursio", b =>
                {
                    b.HasOne("Model.Gimnas", "gimnas")
                        .WithMany()
                        .HasForeignKey("gimnasid_gimnas");

                    b.HasOne("Model.Pokemon", "pokemon")
                        .WithMany()
                        .HasForeignKey("pokemonid_pokemon");

                    b.Navigation("gimnas");

                    b.Navigation("pokemon");
                });

            modelBuilder.Entity("Model.Jugador", b =>
                {
                    b.HasOne("Model.Equip", "equip")
                        .WithMany()
                        .HasForeignKey("equipnom_equip");

                    b.HasOne("Model.Pokemon", "pokemon")
                        .WithMany()
                        .HasForeignKey("pokemonid_pokemon");

                    b.Navigation("equip");

                    b.Navigation("pokemon");
                });

            modelBuilder.Entity("Model.Jugador_Pokemon", b =>
                {
                    b.HasOne("Model.Jugador", "jugador")
                        .WithMany()
                        .HasForeignKey("jugadornom_jugador");

                    b.HasOne("Model.Pokemon", "pokemon")
                        .WithMany()
                        .HasForeignKey("pokemonid_pokemon");

                    b.Navigation("jugador");

                    b.Navigation("pokemon");
                });

            modelBuilder.Entity("Model.Jugador_Pokemon_Gimnas", b =>
                {
                    b.HasOne("Model.Gimnas", "gimnas")
                        .WithMany("te_pokemons")
                        .HasForeignKey("gimnasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Jugador_Pokemon", "jugador_pokemon")
                        .WithMany("esta_a_gimnas")
                        .HasForeignKey("jugador_pokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gimnas");

                    b.Navigation("jugador_pokemon");
                });

            modelBuilder.Entity("Model.Missio_Jugador", b =>
                {
                    b.HasOne("Model.Jugador", "jugadorM")
                        .WithMany("te_missio")
                        .HasForeignKey("jugadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Missio", "missio")
                        .WithMany("te_jugadors")
                        .HasForeignKey("missioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jugadorM");

                    b.Navigation("missio");
                });

            modelBuilder.Entity("Model.Moviment", b =>
                {
                    b.HasOne("Model.Tipus", "tipus")
                        .WithMany()
                        .HasForeignKey("tipusid_tipus");

                    b.Navigation("tipus");
                });

            modelBuilder.Entity("Model.Objecte_Jugador", b =>
                {
                    b.HasOne("Model.Jugador", "jugador")
                        .WithMany("te_objectes")
                        .HasForeignKey("jugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Objecte", "objecte")
                        .WithMany("pertany_a_jugador")
                        .HasForeignKey("objecteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("jugador");

                    b.Navigation("objecte");
                });

            modelBuilder.Entity("Model.Pokedex", b =>
                {
                    b.HasOne("Model.Jugador", "jugador")
                        .WithMany("registrat_pokemon")
                        .HasForeignKey("jugadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Pokemon", "pokemon")
                        .WithMany("vist_per_jugador")
                        .HasForeignKey("pokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jugador");

                    b.Navigation("pokemon");
                });

            modelBuilder.Entity("Model.Regal_enviat", b =>
                {
                    b.HasOne("Model.Jugador", "jugador")
                        .WithMany()
                        .HasForeignKey("jugadornom_jugador");

                    b.HasOne("Model.Regal", "regal")
                        .WithMany()
                        .HasForeignKey("regalid_regal");

                    b.Navigation("jugador");

                    b.Navigation("regal");
                });

            modelBuilder.Entity("MovimentPokemon", b =>
                {
                    b.HasOne("Model.Moviment", null)
                        .WithMany()
                        .HasForeignKey("movimentsid_moviment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("pokemonsid_pokemon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Gimnas", b =>
                {
                    b.Navigation("te_pokemons");
                });

            modelBuilder.Entity("Model.Jugador", b =>
                {
                    b.Navigation("fa_amistats");

                    b.Navigation("registrat_pokemon");

                    b.Navigation("te_amistats");

                    b.Navigation("te_missio");

                    b.Navigation("te_objectes");
                });

            modelBuilder.Entity("Model.Jugador_Pokemon", b =>
                {
                    b.Navigation("esta_a_gimnas");
                });

            modelBuilder.Entity("Model.Missio", b =>
                {
                    b.Navigation("te_jugadors");
                });

            modelBuilder.Entity("Model.Objecte", b =>
                {
                    b.Navigation("pertany_a_jugador");
                });

            modelBuilder.Entity("Model.Pokemon", b =>
                {
                    b.Navigation("fa_evolucions");

                    b.Navigation("te_evolucions");

                    b.Navigation("vist_per_jugador");
                });

            modelBuilder.Entity("Model.Tipus", b =>
                {
                    b.Navigation("fa_efectivitat");

                    b.Navigation("te_efectivitat");
                });
#pragma warning restore 612, 618
        }
    }
}
